basePath: /api/user/v1beta0
definitions:
  Action:
    discriminator: actionType
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
    required:
    - actionType
    x-concreteTypes:
    - $ref: '#/definitions/UriAction'
    - $ref: '#/definitions/ChefAction'
    - $ref: '#/definitions/ScriptAction'
  AllEventsTrigger:
    description: Triggers when any Event fires
    properties:
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-abstractType:
      $ref: '#/definitions/Trigger'
    x-discriminator: triggerType
  ApiErrorResponse:
    properties:
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-usedIn:
    - /{envId}/scripts/{scriptId}/script-versions/
    - /events/{eventId}/
    - /{envId}/scripts/{scriptId}/
    - /{envId}/roles/{roleId}/orchestration-rules/
    - /{envId}/images/{imageId}/actions/copy/
    - /{envId}/roles/{roleId}/
    - /os/{osId}
    - /{envId}/role-categories/
    - /{envId}/roles/{roleId}/images/{imageId}/
    - /{envId}/projects/
    - /{envId}/images/
    - /{envId}/roles/{roleId}/global-variables/
    - /{envId}/projects/{projectId}
    - /{envId}/roles/{roleId}/global-variables/{globalVariableName}
    - /{envId}/scripts/
    - /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}
    - /{envId}/farm-roles/{farmRoleId}/scaling/
    - /{envId}/farms/{farmId}/
    - /{envId}/farm-roles/{farmRoleId}/instance/
    - /{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
    - /{envId}/farm-roles/{farmRoleId}/
    - /{envId}/roles/
    - /os/
    - /{envId}/roles/{roleId}/images/
    - /{envId}/events/
    - /{envId}/events/{eventId}/
    - /{envId}/farm-roles/
    - /events/
    - /{envId}/images/{imageId}/
    - /{envId}/farms/{farmId}/global-variables/
    - /{envId}/farms/{farmId}/global-variables/{globalVariableName}
    - /{envId}/farm-roles/{farmRoleId}/placement/
    - /{envId}/role-categories/{roleCategoryId}/
    - /{envId}/farms/
  ApiMessage:
    properties:
      code:
        description: A machine-readable representation of the message
        type: string
      message:
        description: A human-readable representation of the message
        type: string
  ApiMetaContainer:
    properties:
      sample:
        description: Actual properties TBD
        type: string
  ApiPagination:
    properties:
      first:
        readOnly: true
        type: string
      last:
        readOnly: true
        type: string
      next:
        readOnly: true
        type: string
      prev:
        readOnly: true
        type: string
  AwsClassicPlacementConfiguration:
    properties:
      availabilityZones:
        items:
          type: string
        type: array
      placementConfigurationType:
        enum:
        - AwsClassicPlacementConfiguration
        - AwsVpcPlacementConfiguration
        - OpenStackPlacementConfiguration
        - CloudStackPlacementConfiguration
        - GcePlacementConfiguration
        type: string
      region:
        type: string
    required:
    - placementConfigurationType
    x-abstractType:
      $ref: '#/definitions/PlacementConfiguration'
    x-discriminator: placementConfigurationType
  AwsInstanceConfiguration:
    properties:
      ebsOptimized:
        type: boolean
      instanceConfigurationType:
        enum:
        - AwsInstanceConfiguration
        instanceType:
          $ref: '#/definitions/CloudInstanceType'
        type: string
    required:
    - instanceConfigurationType
    - instanceType
    x-abstractType:
      $ref: '#/definitions/InstanceConfiguration'
    x-discriminator: instanceConfigurationType
  AwsVpcPlacementConfiguration:
    properties:
      placementConfigurationType:
        enum:
        - AwsClassicPlacementConfiguration
        - AwsVpcPlacementConfiguration
        - OpenStackPlacementConfiguration
        - CloudStackPlacementConfiguration
        - GcePlacementConfiguration
        type: string
      subnets:
        items:
          $ref: '#/definitions/CloudAwsVpcSubnetForeignKey'
        type: array
    required:
    - placementConfigurationType
    x-abstractType:
      $ref: '#/definitions/PlacementConfiguration'
    x-discriminator: placementConfigurationType
  ChefAction:
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
    required:
    - actionType
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  CloudAwsVpcForeignKey:
    properties:
      id:
        readOnly: true
        type: string
      region:
        type: string
  CloudAwsVpcSubnetForeignKey:
    properties:
      id:
        readOnly: true
        type: string
      region:
        type: string
  CloudInstanceType:
    properties:
      id:
        type: string
  CloudLocation:
    properties:
      cloudLocation: &id002
        description: More precise Cloud Location (within a given Cloud Platform) for
          this resource. May be null if this resource does not have a location (and
          is global to the platform). Note that if you'd like to filter on this property,
          you **must** also filter on `cloudPlatform`.
        type: string
      cloudPlatform: &id003
        description: Cloud Platform this resources resides in.
        enum:
        - ec2
        - rackspace
        - eucalyptus
        - gce
        - openstack
        - ecs
        - ocs
        - nebula
        - contrail
        - rackspacengus
        - rackspacenguk
        - cloudstack
        - idcf
        type: string
    required:
    - cloudPlatform
    x-filterable:
    - cloudPlatform
    - cloudLocation
    x-usedIn:
    - /{envId}/images/{imageId}/actions/copy/
  CostCenter:
    properties:
      id:
        readOnly: true
        type: string
      name:
        type: string
    required:
    - name
  CostCenterForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/CostCenter'
    x-references:
      $ref: '#/definitions/CostCenter'
  Event:
    properties:
      description:
        type: string
      id:
        description: The name of this custom event
        type: string
      scope:
        enum: &id001
        - scalr
        - account
        - environment
        - farm
        - farmrole
        - server
        readOnly: true
        type: string
    required:
    - id
    x-createOnly:
    - id
    x-filterable:
    - id
    - scope
    x-usedIn:
    - /events/{eventId}/
    - /{envId}/events/
    - /{envId}/events/{eventId}/
    - /events/
  EventDetailResponse:
    properties:
      data:
        $ref: '#/definitions/Event'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Event'
    x-usedIn:
    - /events/{eventId}/
    - /{envId}/events/
    - /{envId}/events/{eventId}/
    - /events/
  EventListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Event'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Event'
    x-usedIn:
    - /{envId}/events/
    - /events/
  Farm:
    properties:
      description:
        type: string
      id:
        readOnly: true
        type: integer
      launchOrder:
        enum:
        - simulatenous
        - sequential
        type: string
      name:
        type: string
      project:
        $ref: '#/definitions/ProjectForeignKey'
      timezone:
        type: string
      vpc:
        $ref: '#/definitions/CloudAwsVpcForeignKey'
    required:
    - name
    - project
    x-usedIn:
    - /{envId}/farms/{farmId}/
    - /{envId}/farms/{farmId}/global-variables/
    - /{envId}/farms/{farmId}/global-variables/{globalVariableName}
    - /{envId}/farms/
  FarmDetailResponse:
    properties:
      data:
        $ref: '#/definitions/Farm'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Farm'
    x-usedIn:
    - /{envId}/farms/{farmId}/
    - /{envId}/farms/
  FarmForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Farm'
    x-references:
      $ref: '#/definitions/Farm'
  FarmListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Farm'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Farm'
    x-usedIn:
    - /{envId}/farms/
  FarmRole:
    properties:
      alias:
        description: The Alias for this Farm Role. If this isn't provided, it will
          default to the Role's name (possibly with '-n' appended if the Role name
          is already taken)
        type: string
      farm:
        $ref: '#/definitions/FarmForeignKey'
        description: Farm this Farm Role should be added to. This is optional when
          POST-ing to /{envId}/farms/{farmId}/farm-roles/
        x-createOnly: true
      id:
        readOnly: true
        type: integer
      instance:
        $ref: '#/definitions/InstanceConfiguration'
      placement:
        $ref: '#/definitions/PlacementConfiguration'
      role:
        $ref: '#/definitions/RoleForeignKey'
      scaling:
        $ref: '#/definitions/ScalingConfiguration'
    required:
    - farm
    - role
    - placementConfiguration
    - instanceConfiguration
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/scaling/
    - /{envId}/farm-roles/{farmRoleId}/instance/
    - /{envId}/farm-roles/{farmRoleId}/
    - /{envId}/farm-roles/
    - /{envId}/farm-roles/{farmRoleId}/placement/
  FarmRoleDetailResponse:
    properties:
      data:
        $ref: '#/definitions/FarmRole'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/FarmRole'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/
    - /{envId}/farm-roles/
  FarmRoleSummary:
    properties:
      alias:
        description: The Alias for this Farm Role. If this isn't provided, it will
          default to the Role's name (possibly with '-n' appended if the Role name
          is already taken)
        type: string
      farm:
        $ref: '#/definitions/FarmForeignKey'
        description: Farm this Farm Role should be added to. This is optional when
          POST-ing to /{envId}/farms/{farmId}/farm-roles/
        x-createOnly: true
      id:
        readOnly: true
        type: integer
      role:
        $ref: '#/definitions/RoleForeignKey'
    required:
    - farm
    - role
  FarmRoleSummaryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/FarmRoleSummary'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/FarmRoleSummary'
    x-usedIn:
    - /{envId}/farm-roles/
  FarmTarget:
    description: Selects all Servers of the triggering Server's Farm
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  GlobalVariable:
    properties:
      computedValue:
        description: The value computed by Scalr for this variable once inheritance
          has been taken into account.
        readOnly: true
        type: string
      declaredIn:
        description: Whether this variable is declared in the current scope.
        enum: *id001
        readOnly: true
        type: string
      hidden:
        description: Whether this variable is hidden in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: boolean
      locked:
        description: Whether this variable is locked in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: boolean
      name:
        type: string
      outputFormat:
        description: The formatting to apply when formatting this variable. This is
          read-only if `declaredIn` is not the current scope.
        type: string
      requiredIn:
        description: The scope where this variable is required. This is read-only
          if `declaredIn` is not the current scope.
        enum: *id001
        type: string
      validationPattern:
        description: A validation pattern to apply in inner scopes. This is read-only
          if `declaredIn` is not the current scope.
        type: string
      value:
        description: The value declared in the current scope for this variable.  null
          allows inheritance. Any other value overrides inheritance.  This is ignored
          if `declaredIn` is not the current scope.
        type: string
    required:
    - name
    x-createOnly:
    - name
    x-usedIn:
    - /{envId}/roles/{roleId}/global-variables/
    - /{envId}/roles/{roleId}/global-variables/{globalVariableName}
    - /{envId}/farms/{farmId}/global-variables/
    - /{envId}/farms/{farmId}/global-variables/{globalVariableName}
  GlobalVariableDetailResponse:
    properties:
      data:
        $ref: '#/definitions/GlobalVariable'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/GlobalVariable'
    x-usedIn:
    - /{envId}/roles/{roleId}/global-variables/
    - /{envId}/roles/{roleId}/global-variables/{globalVariableName}
    - /{envId}/farms/{farmId}/global-variables/
    - /{envId}/farms/{farmId}/global-variables/{globalVariableName}
  GlobalVariableListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/GlobalVariable'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/GlobalVariable'
    x-usedIn:
    - /{envId}/roles/{roleId}/global-variables/
    - /{envId}/farms/{farmId}/global-variables/
  Image:
    properties:
      added:
        description: Date and time when this Image was created
        format: date-time
        readOnly: true
        type: string
      architecture:
        enum: &id004
        - i386
        - x86_64
        type: string
      cloudImageId:
        type: string
      cloudLocation: *id002
      cloudPlatform: *id003
      deprecated:
        description: Whether this Image is deprecated
        readOnly: true
        type: boolean
      id:
        readOnly: true
        type: string
      lastUsed:
        description: Date and time when this Image was last used
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      os:
        $ref: '#/definitions/OsForeignKey'
      scope:
        enum: *id001
        readOnly: true
        type: string
      size:
        readOnly: true
        type: integer
      source:
        description: Indicates how this Image was created
        enum:
        - Manual
        - BundleTask
        readOnly: true
        type: string
      status:
        description: Current status for this Image. Not that `delete` means deletion
          is underway, and `failed` means deletion failed
        enum:
        - active
        - delete
        - failed
        readOnly: true
        type: string
      statusError:
        description: If the Image is in a failed state, this indicates why.
        readOnly: true
        type: string
      type:
        description: (Only used on EC2 currently) Whether this Image is HVM or EBS.
        readOnly: true
        type: string
    required:
    - name
    - cloudPlatform
    - cloudImageId
    - architecture
    - os
    x-filterable:
    - id
    - name
    - scope
    - cloudPlatform
    - cloudLocation
    - cloudImageId
    - architecture
    - source
    - status
    - deprecated
    - os
    x-usedIn:
    - /{envId}/images/{imageId}/actions/copy/
    - /{envId}/roles/{roleId}/images/{imageId}/
    - /{envId}/images/
    - /{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /{envId}/images/{imageId}/
  ImageDetailResponse:
    properties:
      data:
        $ref: '#/definitions/Image'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Image'
    x-usedIn:
    - /{envId}/images/{imageId}/actions/copy/
    - /{envId}/images/
    - /{envId}/images/{imageId}/
  ImageForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Image'
    x-references:
      $ref: '#/definitions/Image'
  ImageListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Image'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Image'
    x-usedIn:
    - /{envId}/images/
  InstanceConfiguration:
    discriminator: instanceConfigurationType
    properties:
      instanceConfigurationType:
        enum:
        - AwsInstanceConfiguration
        instanceType:
          $ref: '#/definitions/CloudInstanceType'
        type: string
    required:
    - instanceConfigurationType
    - instanceType
    x-concreteTypes:
    - $ref: '#/definitions/AwsInstanceConfiguration'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/instance/
  InstanceConfigurationDetailResponse:
    properties:
      data:
        $ref: '#/definitions/InstanceConfiguration'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/InstanceConfiguration'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/instance/
  NullTarget:
    description: Selects no Server at all
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  OrchestrationRule:
    properties:
      action:
        $ref: '#/definitions/Action'
      blocking:
        description: Should this Orchestration Rule's execution delay the execution
          of further Orchestration Rules and triggering of further Events? Defaults
          to the action's default when null.
        type: boolean
      id:
        readOnly: true
        type: integer
      order:
        description: When should this Orchestration Rule execute relative to other
          Orchestration Rules that use the same triggeringEvent? Default is relative
          to existing Rules.
        type: integer
      runAs:
        descrition: User the Orchestration Rule should execute as. Defaults to root
          / Administrator when null.
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
      target:
        $ref: '#/definitions/Target'
      timeout:
        description: How long should Scalr wait before aborting the execution of this
          Orchestration Rule? Defaults to the action's default when null.
        type: integer
      trigger:
        $ref: '#/definitions/Trigger'
    required:
    - trigger
    - action
    - target
    x-filterable:
    - id
    - scope
    x-usedIn:
    - /{envId}/roles/{roleId}/orchestration-rules/
    - /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}
  OrchestrationRuleDetailResponse:
    properties:
      data:
        $ref: '#/definitions/OrchestrationRule'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/OrchestrationRule'
    x-usedIn:
    - /{envId}/roles/{roleId}/orchestration-rules/
    - /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}
  OrchestrationRuleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/OrchestrationRule'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/OrchestrationRule'
    x-usedIn:
    - /{envId}/roles/{roleId}/orchestration-rules/
  Os:
    properties:
      family:
        enum:
        - debian
        - ubuntu
        - rhel
        - centos
        - amazon
        - windows
        type: string
      generation:
        enum:
        - 5
        - 6
        - 7
        - 10.04
        - 12.04
        - 14.04
        - 2003
        - 2008
        - 2012
        - 2012.09
        - 2013.03
        - 2014.03
        - 2014.09
        type: string
      id:
        description: An ID uniquely identifying this OS in Scalr.
        type: string
      name:
        description: A human-readable name for this OS.
        type: string
      version:
        type: string
    required:
    - id
    - name
    - family
    - generation
    - version
    x-filterable:
    - id
    - name
    - family
    - generation
    x-usedIn:
    - /os/{osId}
  OsDetailResponse:
    properties:
      data:
        $ref: '#/definitions/Os'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Os'
    x-usedIn:
    - /os/{osId}
  OsForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Os'
    x-references:
      $ref: '#/definitions/Os'
  OsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Os'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Os'
    x-usedIn:
    - /os/
  PlacementConfiguration:
    discriminator: placementConfigurationType
    properties:
      placementConfigurationType:
        enum:
        - AwsClassicPlacementConfiguration
        - AwsVpcPlacementConfiguration
        - OpenStackPlacementConfiguration
        - CloudStackPlacementConfiguration
        - GcePlacementConfiguration
        type: string
    required:
    - placementConfigurationType
    x-concreteTypes:
    - $ref: '#/definitions/AwsVpcPlacementConfiguration'
    - $ref: '#/definitions/AwsClassicPlacementConfiguration'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/placement/
  PlacementConfigurationDetailResponse:
    properties:
      data:
        $ref: '#/definitions/PlacementConfiguration'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/PlacementConfiguration'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/placement/
  Project:
    properties:
      costCenter:
        $ref: '#/definitions/CostCenterForeignKey'
      id:
        readOnly: true
        type: string
      name:
        type: string
    required:
    - costCenter
    - name
    x-usedIn:
    - /{envId}/projects/{projectId}
  ProjectDetailResponse:
    properties:
      data:
        $ref: '#/definitions/Project'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Project'
    x-usedIn:
    - /{envId}/projects/{projectId}
  ProjectForeignKey:
    properties:
      id:
        type: string
    required:
    - id
    x-derived:
      $ref: '#/definitions/Project'
    x-references:
      $ref: '#/definitions/Project'
  ProjectListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Project'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Project'
    x-usedIn:
    - /{envId}/projects/
  Role:
    properties:
      category:
        $ref: '#/definitions/RoleCategoryForeignKey'
      description:
        type: string
      id:
        readOnly: true
        type: integer
      name:
        type: string
      os:
        $ref: '#/definitions/OsForeignKey'
      scope:
        enum: *id001
        readOnly: true
        type: string
    required:
    - name
    - category
    - os
    x-filterable:
    - id
    - name
    - os
    - category
    - scope
    x-usedIn:
    - /{envId}/roles/{roleId}/orchestration-rules/
    - /{envId}/roles/{roleId}/
    - /{envId}/roles/{roleId}/images/{imageId}/
    - /{envId}/roles/{roleId}/global-variables/
    - /{envId}/roles/{roleId}/global-variables/{globalVariableName}
    - /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}
    - /{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /{envId}/roles/
    - /{envId}/roles/{roleId}/images/
  RoleCategory:
    properties:
      id:
        readOnly: true
        type: integer
      name:
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
    required:
    - name
    x-createOnly:
    - name
    x-filterable:
    - id
    - name
    - scope
    x-usedIn:
    - /{envId}/role-categories/{roleCategoryId}/
  RoleCategoryDetailResponse:
    properties:
      data:
        $ref: '#/definitions/RoleCategory'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-usedIn:
    - /{envId}/role-categories/{roleCategoryId}/
  RoleCategoryForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-references:
      $ref: '#/definitions/RoleCategory'
  RoleCategoryListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleCategory'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleCategory'
    x-usedIn:
    - /{envId}/role-categories/
  RoleDetailResponse:
    properties:
      data:
        $ref: '#/definitions/Role'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Role'
    x-usedIn:
    - /{envId}/roles/{roleId}/
    - /{envId}/roles/
  RoleForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Role'
    x-references:
      $ref: '#/definitions/Role'
  RoleImage:
    description: A Representation of a Role Image. Note that the `role` property is
      optional when POST-ing to a URL that already includes `{roleId}`.
    properties:
      image:
        $ref: '#/definitions/ImageForeignKey'
      role:
        $ref: '#/definitions/RoleForeignKey'
    required:
    - role
    - image
    x-filterable:
    - role
    - image
    x-usedIn:
    - /{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /{envId}/roles/{roleId}/images/
  RoleImageDetailResponse:
    properties:
      data:
        $ref: '#/definitions/RoleImage'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleImage'
    x-usedIn:
    - /{envId}/roles/{roleId}/images/{imageId}/actions/replace/
    - /{envId}/roles/{roleId}/images/
  RoleImageListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleImage'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/RoleImage'
    x-usedIn:
    - /{envId}/roles/{roleId}/images/
  RoleListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Role'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Role'
    x-usedIn:
    - /{envId}/roles/
  ScalingConfiguration:
    properties:
      enabled:
        type: boolean
      maxInstances:
        type: integer
      minInstances:
        type: integer
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/scaling/
  ScalingConfigurationDetailResponse:
    properties:
      data:
        $ref: '#/definitions/ScalingConfiguration'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScalingConfiguration'
    x-usedIn:
    - /{envId}/farm-roles/{farmRoleId}/scaling/
  Script:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      blockingDefault:
        type: boolean
      description:
        type: string
      id:
        readOnly: true
        type: integer
      lastChanged:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      osType:
        description: Type of OS this Script should execute on. This will influence
          Orchestration Rules, an will trigger validation on individual ScriptVersion's
          you upload.
        enum:
        - linux
        - windows
        type: string
      scope:
        enum: *id001
        readOnly: true
        type: string
      timeoutDefault:
        type: integer
    required:
    - id
    - name
    - scope
    - osType
    x-usedIn:
    - /{envId}/scripts/{scriptId}/script-versions/
    - /{envId}/scripts/{scriptId}/
    - /{envId}/scripts/
    - /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptAction:
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
      scriptVersion:
        $ref: '#/definitions/ScriptVersionForeignKey'
        description: ScriptVersion to execute.
    required:
    - actionType
    - scriptVersion
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
  ScriptDetailResponse:
    properties:
      data:
        $ref: '#/definitions/Script'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Script'
    x-usedIn:
    - /{envId}/scripts/{scriptId}/
    - /{envId}/scripts/
  ScriptForeignKey:
    properties:
      id:
        type: integer
    required:
    - id
    x-derived:
      $ref: '#/definitions/Script'
    x-references:
      $ref: '#/definitions/Script'
  ScriptListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Script'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/Script'
    x-usedIn:
    - /{envId}/scripts/
  ScriptVersion:
    properties:
      added:
        format: date-time
        readOnly: true
        type: string
      body:
        description: The contents of this ScriptVersion, those will be validated as
          per the Script's OS Type.
        type: string
      script:
        $ref: '#/definitions/ScriptForeignKey'
        description: The Script this ScriptVersion is a version of
      version:
        description: 'If at least one version exists, Scalr will return the latest
          ScriptVersion twice: one with version set, and one with version nulled.
          The null version represents the ''latest'' version of the Script, and may
          be used'
        readOnly: true
        type: integer
    required:
    - body
    x-createOnly:
    - script
    x-usedIn:
    - /{envId}/scripts/{scriptId}/script-versions/
    - /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptVersionDetailResponse:
    properties:
      data:
        $ref: '#/definitions/ScriptVersion'
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScriptVersion'
    x-usedIn:
    - /{envId}/scripts/{scriptId}/script-versions/
    - /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/
  ScriptVersionForeignKey:
    properties:
      script:
        $ref: '#/definitions/ScriptForeignKey'
        description: The Script this ScriptVersion is a version of
      version:
        description: 'If at least one version exists, Scalr will return the latest
          ScriptVersion twice: one with version set, and one with version nulled.
          The null version represents the ''latest'' version of the Script, and may
          be used'
        readOnly: true
        type: integer
    x-createOnly:
    - script
  ScriptVersionListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/ScriptVersion'
        readOnly: true
        type: array
      errors:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
      meta:
        $ref: '#/definitions/ApiMetaContainer'
        readOnly: true
      pagination:
        $ref: '#/definitions/ApiPagination'
        readOnly: true
      warnings:
        items:
          $ref: '#/definitions/ApiMessage'
        readOnly: true
        type: array
    x-derived:
      $ref: '#/definitions/ScriptVersion'
    x-usedIn:
    - /{envId}/scripts/{scriptId}/script-versions/
  SelectedFarmRolesTarget:
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  SpecificEventTrigger:
    description: Triggers when a specific Event fires
    properties:
      event:
        $ref: '#/definitions/Event'
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-abstractType:
      $ref: '#/definitions/Trigger'
    x-discriminator: triggerType
  Target:
    discriminator: targetType
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-concreteTypes:
    - $ref: '#/definitions/FarmTarget'
    - $ref: '#/definitions/TriggeringFarmRoleTarget'
    - $ref: '#/definitions/SelectedFarmRolesTarget'
    - $ref: '#/definitions/TriggeringServerTarget'
    - $ref: '#/definitions/NullTarget'
  Trigger:
    discriminator: triggerType
    properties:
      triggerType:
        enum:
        - AllEventsTrigger
        - SpecificEventTrigger
        type: string
    required:
    - triggerType
    x-concreteTypes:
    - $ref: '#/definitions/SpecificEventTrigger'
    - $ref: '#/definitions/AllEventsTrigger'
  TriggeringFarmRoleTarget:
    description: Selects all Servers of the triggering Server's Farm Role
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  TriggeringServerTarget:
    description: Selects the Server that triggered the Event
    properties:
      targetType:
        enum:
        - NullTarget
        - TriggeringServerTarget
        - TriggeringFarmRoleTarget
        - SelectedFarmRolesTarget
        - FarmTarget
        type: string
    required:
    - targetType
    x-abstractType:
      $ref: '#/definitions/Target'
    x-discriminator: targetType
  UriAction:
    properties:
      actionType:
        enum:
        - ScriptAction
        - UriAction
        - ChefAction
        type: string
      uri:
        description: Path or URL to the script to execute.
        type: string
    required:
    - actionType
    - uri
    x-abstractType:
      $ref: '#/definitions/Action'
    x-discriminator: actionType
info:
  description: Manage Roles, Images, Farms, Farm Roles, and Servers
  title: Scalr User API
  version: 1.0.0
paths:
  /events/:
    get:
      description: Retrieve a list of Events available in this Scalr Account.
      responses:
        200:
          description: A list of Event objects.
          schema:
            $ref: '#/definitions/EventListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    post:
      description: Create a new Custom Event in this Account.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        201:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /events/{eventId}/:
    delete:
      description: Delete this Event from this Account.
      responses:
        200:
          errors:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
          meta:
            $ref: '#/definitions/ApiMetaContainer'
            readOnly: true
          warnings:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve an Event.
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Event object.
      in: path
      name: eventId
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Event'
    patch:
      description: Change Event attributes.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /os/:
    get:
      description: Retrieve a list of Operating Systems available in this Scalr Account.
      responses:
        200:
          description: A list of Os objects.
          schema:
            $ref: '#/definitions/OsListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /os/{osId}:
    get:
      description: Retrieve an OS.
      responses:
        200:
          description: The JSON representation of a Os object.
          schema:
            $ref: '#/definitions/OsDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of a Os object.
      in: path
      name: osId
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Os'
  /{envId}/events/:
    get:
      description: Retrieve a list of Events available in this Scalr Environment.
      responses:
        200:
          description: A list of Event objects.
          schema:
            $ref: '#/definitions/EventListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Create a new Custom Event in this Environment.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        201:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/events/{eventId}/:
    delete:
      description: Delete this Event from this Environment.
      responses:
        200:
          errors:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
          meta:
            $ref: '#/definitions/ApiMetaContainer'
            readOnly: true
          warnings:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve an Event.
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Event object.
      in: path
      name: eventId
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Event'
    patch:
      description: Change Event attributes.
      parameters:
      - description: The JSON representation of a Event object.
        in: body
        name: eventObject
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        200:
          description: The JSON representation of a Event object.
          schema:
            $ref: '#/definitions/EventDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/:
    get:
      responses:
        200:
          description: A list of FarmRoleSummary objects.
          schema:
            $ref: '#/definitions/FarmRoleSummaryListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    post:
      parameters:
      - description: The JSON representation of a FarmRole object.
        in: body
        name: farmRoleObject
        required: true
        schema:
          $ref: '#/definitions/FarmRole'
      responses:
        201:
          description: The JSON representation of a FarmRole object.
          schema:
            $ref: '#/definitions/FarmRoleDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/:
    delete:
      responses:
        200:
          description: Farm Role deleted
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      responses:
        200:
          description: The JSON representation of a FarmRole object.
          schema:
            $ref: '#/definitions/FarmRoleDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    patch:
      parameters:
      - description: The JSON representation of a FarmRole object.
        in: body
        name: farmRoleObject
        required: true
        schema:
          $ref: '#/definitions/FarmRole'
      responses:
        200:
          description: The JSON representation of a FarmRole object.
          schema:
            $ref: '#/definitions/FarmRoleDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/instance/:
    get:
      responses:
        200:
          description: The JSON representation of a InstanceConfiguration object.
          schema:
            $ref: '#/definitions/InstanceConfigurationDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    patch:
      parameters:
      - description: The JSON representation of a InstanceConfiguration object.
        in: body
        name: instanceConfigurationObject
        required: true
        schema:
          $ref: '#/definitions/InstanceConfiguration'
      responses:
        200:
          description: The JSON representation of a InstanceConfiguration object.
          schema:
            $ref: '#/definitions/InstanceConfigurationDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/placement/:
    get:
      responses:
        200:
          description: The JSON representation of a PlacementConfiguration object.
          schema:
            $ref: '#/definitions/PlacementConfigurationDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    patch:
      parameters:
      - description: The JSON representation of a PlacementConfiguration object.
        in: body
        name: placementConfigurationObject
        required: true
        schema:
          $ref: '#/definitions/PlacementConfiguration'
      responses:
        200:
          description: The JSON representation of a PlacementConfiguration object.
          schema:
            $ref: '#/definitions/PlacementConfigurationDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farm-roles/{farmRoleId}/scaling/:
    get:
      responses:
        200:
          description: The JSON representation of a ScalingConfiguration object.
          schema:
            $ref: '#/definitions/ScalingConfigurationDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a FarmRole object.
      in: path
      name: farmRoleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/FarmRole'
    patch:
      parameters:
      - description: The JSON representation of a ScalingConfiguration object.
        in: body
        name: scalingConfigurationObject
        required: true
        schema:
          $ref: '#/definitions/ScalingConfiguration'
      responses:
        200:
          description: The JSON representation of a ScalingConfiguration object.
          schema:
            $ref: '#/definitions/ScalingConfigurationDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/:
    get:
      responses:
        200:
          description: A list of Farm objects.
          schema:
            $ref: '#/definitions/FarmListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    post:
      parameters:
      - description: The JSON representation of a Farm object.
        in: body
        name: farmObject
        required: true
        schema:
          $ref: '#/definitions/Farm'
      responses:
        201:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/:
    delete:
      responses:
        200:
          description: Farm deleted
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    patch:
      parameters:
      - description: The JSON representation of a Farm object.
        in: body
        name: farmObject
        required: true
        schema:
          $ref: '#/definitions/Farm'
      responses:
        200:
          description: The JSON representation of a Farm object.
          schema:
            $ref: '#/definitions/FarmDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/global-variables/:
    get:
      description: List Global Variables associated with this Farm
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    post:
      description: Declare a new Global Variable for this Farm
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/farms/{farmId}/global-variables/{globalVariableName}:
    delete:
      description: Delete a Global Variable from this Farm's scope
      responses:
        200:
          description: Global Variable deleted
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve a Global Variable's value in this Farm's scope
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Farm object.
      in: path
      name: farmId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Farm'
    - description: The name of the Global Variable being accessed.
      in: path
      name: globalVariableName
      required: true
      type: string
    patch:
      description: Update a Global Variable's value in this Farm's scope
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        202:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/images/:
    get:
      description: List Images available in this Environment
      responses:
        200:
          description: A list of Image objects.
          schema:
            $ref: '#/definitions/ImageListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Register a new Image in this Environment
      parameters:
      - description: The JSON representation of a Image object.
        in: body
        name: imageObject
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        201:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/images/{imageId}/:
    delete:
      description: De-register an Image from this Environment
      parameters:
      - description: Attempt to delete this Image in your Cloud
        in: query
        name: cloudDelete
        required: false
        type: boolean
      responses:
        200:
          errors:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
          meta:
            $ref: '#/definitions/ApiMetaContainer'
            readOnly: true
          warnings:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
        202:
          description: Image scheduled for de-registration and deletion
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve an Image.
      responses:
        200:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Image object.
      in: path
      name: imageId
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    patch:
      description: Change image attributes. Only the name be can changed!
      parameters:
      - description: The updated definition
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        200:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/images/{imageId}/actions/copy/:
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Image object.
      in: path
      name: imageId
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Copy an image from one EC2 region to another
      parameters:
      - description: The EC2 region to copy this Image to
        in: body
        name: copyTo
        required: true
        schema:
          $ref: '#/definitions/CloudLocation'
      responses:
        202:
          description: The JSON representation of a Image object.
          schema:
            $ref: '#/definitions/ImageDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/projects/:
    get:
      description: List Projects available in this Environment
      responses:
        200:
          description: A list of Project objects.
          schema:
            $ref: '#/definitions/ProjectListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
  /{envId}/projects/{projectId}:
    get:
      description: Return a JSON representation of a Project
      responses:
        200:
          description: The JSON representation of a Project object.
          schema:
            $ref: '#/definitions/ProjectDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Project object.
      in: path
      name: projectId
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Project'
  /{envId}/role-categories/:
    get:
      description: List Role Categories available in this Environment
      responses:
        200:
          description: A list of RoleCategory objects.
          schema:
            $ref: '#/definitions/RoleCategoryListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
  /{envId}/role-categories/{roleCategoryId}/:
    get:
      description: Return a JSON representation of a Role Category
      responses:
        200:
          description: The JSON representation of a RoleCategory object.
          schema:
            $ref: '#/definitions/RoleCategoryDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a RoleCategory object.
      in: path
      name: roleCategoryId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/RoleCategory'
  /{envId}/roles/:
    get:
      description: List Roles available in this Environment
      responses:
        200:
          description: A list of Role objects.
          schema:
            $ref: '#/definitions/RoleListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Create a new Role in this Environment
      parameters:
      - description: The JSON representation of a Role object.
        in: body
        name: roleObject
        required: true
        schema:
          $ref: '#/definitions/Role'
      responses:
        201:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/:
    delete:
      description: Delete this Role from this Environment.
      responses:
        200:
          errors:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
          meta:
            $ref: '#/definitions/ApiMetaContainer'
            readOnly: true
          warnings:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve a Role.
      responses:
        200:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    patch:
      description: Change Role attributes.
      parameters:
      - description: The JSON representation of a Role object.
        in: body
        name: roleObject
        required: true
        schema:
          $ref: '#/definitions/Role'
      responses:
        200:
          description: The JSON representation of a Role object.
          schema:
            $ref: '#/definitions/RoleDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/global-variables/:
    get:
      description: List Global Variables associated with this Role
      responses:
        200:
          description: A list of GlobalVariable objects.
          schema:
            $ref: '#/definitions/GlobalVariableListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Declare a new Global Variable for this Role
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        201:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/global-variables/{globalVariableName}:
    delete:
      description: Delete a Global Variable from this Role's scope
      responses:
        200:
          errors:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
          meta:
            $ref: '#/definitions/ApiMetaContainer'
            readOnly: true
          warnings:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve a Global Variable's value in this Role's scope
      responses:
        200:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The name of the Global Variable being accessed.
      in: path
      name: globalVariableName
      required: true
      type: string
    patch:
      description: Update a Global Variable's value in this Role's scope
      parameters:
      - description: The JSON representation of a GlobalVariable object.
        in: body
        name: globalVariableObject
        required: true
        schema:
          $ref: '#/definitions/GlobalVariable'
      responses:
        202:
          description: The JSON representation of a GlobalVariable object.
          schema:
            $ref: '#/definitions/GlobalVariableDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/images/:
    get:
      description: List Images associated with this Role
      responses:
        200:
          description: A list of RoleImage objects.
          schema:
            $ref: '#/definitions/RoleImageListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Associate a new Image with this Role. This may fail if an existing
        Image conflicts with the Image you are trying to add (i.e. they are in the
        same location)
      parameters:
      - description: The JSON representation of a RoleImage object.
        in: body
        name: roleImageObject
        required: true
        schema:
          $ref: '#/definitions/RoleImage'
      responses:
        201:
          description: The JSON representation of a RoleImage object.
          schema:
            $ref: '#/definitions/RoleImageDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/images/{imageId}/:
    delete:
      description: Dis-associate this Image from this Role
      responses:
        200:
          errors:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
          meta:
            $ref: '#/definitions/ApiMetaContainer'
            readOnly: true
          warnings:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Redirects to the Image
      responses:
        302:
          description: Redirects to the Image.
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a Image object.
      in: path
      name: imageId
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
  /{envId}/roles/{roleId}/images/{imageId}/actions/replace/:
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a Image object.
      in: path
      name: imageId
      required: true
      type: string
      x-references:
        $ref: '#/definitions/Image'
    post:
      description: Replace an Image in-place. This allows you to replace an Image
        without having to dis-associate it and then associate a new one, which may
        not be possible if a Farm Role is currently using this Image.
      parameters:
      - description: The JSON representation of a RoleImage object.
        in: body
        name: roleImageObject
        required: true
        schema:
          $ref: '#/definitions/RoleImage'
      responses:
        200:
          description: The JSON representation of a RoleImage object.
          schema:
            $ref: '#/definitions/RoleImageDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/orchestration-rules/:
    get:
      description: List Orchestration Rules associated with this Role, including Rules
        from other Scopes (those are read-only).
      responses:
        200:
          description: A list of OrchestrationRule objects.
          schema:
            $ref: '#/definitions/OrchestrationRuleListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    post:
      description: Associate a new Orchestration Rule with this Role
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        201:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/roles/{roleId}/orchestration-rules/{orchestrationRuleId}:
    delete:
      description: Delete an Orchestration Rule associated with this Role
      responses:
        200:
          errors:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
          meta:
            $ref: '#/definitions/ApiMetaContainer'
            readOnly: true
          warnings:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve an Orchestration Rule
      responses:
        200:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Role object.
      in: path
      name: roleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Role'
    - description: The ID of a OrchestrationRule object.
      in: path
      name: orchestrationRuleId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/OrchestrationRule'
    patch:
      description: Update an Orchestration rule
      parameters:
      - description: The JSON representation of a OrchestrationRule object.
        in: body
        name: orchestrationRuleObject
        required: true
        schema:
          $ref: '#/definitions/OrchestrationRule'
      responses:
        202:
          description: The JSON representation of a OrchestrationRule object.
          schema:
            $ref: '#/definitions/OrchestrationRuleDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/:
    get:
      description: List Scripts available in this Environment
      responses:
        200:
          description: A list of Script objects.
          schema:
            $ref: '#/definitions/ScriptListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    post:
      description: Create a new Script in this Environment.
      parameters:
      - description: The JSON representation of a Script object.
        in: body
        name: scriptObject
        required: true
        schema:
          $ref: '#/definitions/Script'
      responses:
        201:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/{scriptId}/:
    delete:
      description: Delete this Script from this Environment.
      responses:
        200:
          errors:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
          meta:
            $ref: '#/definitions/ApiMetaContainer'
            readOnly: true
          warnings:
            items:
              $ref: '#/definitions/ApiMessage'
            readOnly: true
            type: array
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    get:
      description: Retrieve a Script.
      responses:
        200:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    patch:
      description: Change Script attributes.
      parameters:
      - description: The JSON representation of a Script object.
        in: body
        name: scriptObject
        required: true
        schema:
          $ref: '#/definitions/Script'
      responses:
        200:
          description: The JSON representation of a Script object.
          schema:
            $ref: '#/definitions/ScriptDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/{scriptId}/script-versions/:
    get:
      description: List versions for this Script.
      responses:
        200:
          description: A list of ScriptVersion objects.
          schema:
            $ref: '#/definitions/ScriptVersionListResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    post:
      description: Create a new Script Version for this Script.
      parameters:
      - description: The JSON representation of a ScriptVersion object.
        in: body
        name: scriptVersionObject
        required: true
        schema:
          $ref: '#/definitions/ScriptVersion'
      responses:
        201:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
  /{envId}/scripts/{scriptId}/script-versions/{scriptVersionNumber}/:
    get:
      description: Retrieve a Script Version.
      responses:
        200:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
    parameters:
    - description: The ID of the Environment scoping this request
      in: path
      name: envId
      required: true
      type: integer
    - description: The ID of a Script object.
      in: path
      name: scriptId
      required: true
      type: integer
      x-references:
        $ref: '#/definitions/Script'
    - description: The version number of the Script Version being accessed
      in: path
      name: scriptVersionNumber
      required: true
      type: integer
    patch:
      description: Change Script Version attributes.
      parameters:
      - description: The JSON representation of a ScriptVersion object.
        in: body
        name: scriptVersionObject
        required: true
        schema:
          $ref: '#/definitions/ScriptVersion'
      responses:
        200:
          description: The JSON representation of a ScriptVersion object.
          schema:
            $ref: '#/definitions/ScriptVersionDetailResponse'
        400:
          description: A client-side error was made
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request is structurally incorrect, and was not understood
              by the API.
            name: InvalidStructure
          - description: Your request was understood by the API, but included data
              that is not acceptable.
            name: InvalidValue
          - description: Your request wasn't understood by the API.
            name: BadRequest
        401:
          description: Request was not authenticated
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request authentication failed to validate.
            name: BadAuthentication
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: Your request should be made in a different Scope.
            name: ScopeViolation
          - description: Your request requires permissions you do not have.
            name: PermissionViolation
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The route you are trying to access does not exist
            name: EndpointNotFound
            noDoc: true
          - description: The URL you are trying to access does not exist
            name: ObjectNotFound
        409:
          description: Conflict with current state
          schema:
            $ref: '#/definitions/ApiErrorResponse'
          x-errorCodes:
          - description: The changes you are trying to make aren't possible while
              this object is in use.
            name: ObjectInUse
          - description: The changes you are trying to make violate a unicity constraint.
            name: UnicityViolation
        500:
          description: A server-side error occured
          schema:
            $ref: '#/definitions/ApiErrorResponse'
produces:
- application/json
swagger: '2.0'
x-dry-yaml-definitions:
  architecture:
    enum: *id004
    type: string
  cloudLocationProperties:
    cloudLocation: *id002
    cloudPlatform: *id003
  scopeProperty:
    enum: *id001
    type: string
